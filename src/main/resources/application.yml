
# define our server port
server.port: 8080

logging.level.root: WARN
logging.level.web: INFO
logging.level.com.example: DEBUG

# generate the hibernate entities
spring.jpa.generate-ddl: true

# JWT secret key
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
token.secret.key: 48a868a4042f634ac04a117f00a87202131dd7c46c4b32c4acb3edc5e15f4511

# JWT expiration is 1 hour
token.expirationms: 3600000

spring.datasource.url: jdbc:mysql://localhost:3306/mysqldb?serverTimezone=Asia/Singapore&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username: mysqluser
spring.datasource.password: password
spring.jpa.show-sql: true
spring.jpa.dialect: org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.id.new_generator_mappings: false
spring.jpa.database-platform: org.hibernate.dialect.MySQLDialect

spring:
  datasource:
#    schema: classpath:droptables.sql, classpath:schema-mysql.sql
    #    data: classpath:data-static.sql
#    initialization-mode: always
    auto-commit: true
    jpa:
      show-sql: true
      format-sql: true
      use-sql-comments: true
  #  test:
  #    database:
  #      replace: NONE  # run mySQL (instead of the default H2 embedded database). or @AutoConfigureTestDatabase(replace=Replace.NONE) or @EnableAutoConfiguration(exclude=AutoConfigureTestDatabase.class)
  jpa:
    generate-ddl: true
    hibernate:
      #      ddl-auto: validate, update, create, create-drop, none
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  cache:
    type: none
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false